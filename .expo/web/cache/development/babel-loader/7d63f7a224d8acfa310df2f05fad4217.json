{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/home/bharat/Desktop/talkon/components/home/Card.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ScreenWidth = Math.round(_reactNative.Dimensions.get('window').width);\nvar ScreenHeight = Math.round(_reactNative.Dimensions.get('window').height);\n\nvar Card = function (_React$Component) {\n  (0, _inherits2.default)(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    (0, _classCallCheck2.default)(this, Card);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(_reactNative.View, {\n        style: {\n          margin: 5,\n          borderColor: \"white\",\n          borderWidth: 3,\n          borderRadius: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, React.createElement(_reactNative.TouchableOpacity, {\n        style: styles.container,\n        onPress: function onPress() {\n          _this.props.navigate(\"Detail\", {\n            id: _this.props.id,\n            cat: _this.props.cat\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, React.createElement(_reactNative.Image, {\n        source: this.props.image,\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return Card;\n}(React.Component);\n\nexports.default = Card;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1f4068',\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  image: {\n    flex: 1,\n    width: ScreenWidth * 0.95,\n    aspectRatio: 1.5,\n    resizeMode: \"contain\",\n    borderWidth: 2,\n    borderColor: 'white'\n  },\n  text: {\n    color: \"white\",\n    fontSize: 40\n  }\n});","map":{"version":3,"sources":["/home/bharat/Desktop/talkon/components/home/Card.js"],"names":["ScreenWidth","Math","round","Dimensions","get","width","ScreenHeight","height","Card","margin","borderColor","borderWidth","borderRadius","styles","container","props","navigate","id","cat","image","React","Component","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","aspectRatio","resizeMode","text","color","fontSize"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,WAAW,GAACC,IAAI,CAACC,KAAL,CAAWC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAApC,CAAlB;AACA,IAAMC,YAAY,GAACL,IAAI,CAACC,KAAL,CAAWC,wBAAWC,GAAX,CAAe,QAAf,EAAyBG,MAApC,CAAnB;;IAEqBC,I;;;;;;;;;;;;6BAET;AAAA;;AAGJ,aACE,oBAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAC,CAAR;AAAUC,UAAAA,WAAW,EAAC,OAAtB;AAA+BC,UAAAA,WAAW,EAAC,CAA3C;AAA6CC,UAAAA,YAAY,EAAC;AAA1D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,6BAAD;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACC,SAAhC;AAA2C,QAAA,OAAO,EAAE,mBAAI;AAAC,UAAA,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoB,QAApB,EAA6B;AAACC,YAAAA,EAAE,EAAC,KAAI,CAACF,KAAL,CAAWE,EAAf;AAAkBC,YAAAA,GAAG,EAAC,KAAI,CAACH,KAAL,CAAWG;AAAjC,WAA7B;AAAoE,SAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,kBAAD;AAAO,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,KAA1B;AAAiC,QAAA,KAAK,EAAEN,MAAM,CAACM,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFF,CADF;AASH;;;EAd6BC,KAAK,CAACC,S;;;;AAgBxC,IAAMR,MAAM,GAAGS,wBAAWC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACXU,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,eAAe,EAAE,SAFN;AAGXC,IAAAA,cAAc,EAAC,QAHJ;AAIXC,IAAAA,UAAU,EAAC;AAJA,GADkB;AAU7BR,EAAAA,KAAK,EAAC;AAEJK,IAAAA,IAAI,EAAC,CAFD;AAGJnB,IAAAA,KAAK,EAACL,WAAW,GAAC,IAHd;AAIJ4B,IAAAA,WAAW,EAAC,GAJR;AAKJC,IAAAA,UAAU,EAAC,SALP;AAMJlB,IAAAA,WAAW,EAAC,CANR;AAOJD,IAAAA,WAAW,EAAC;AAPR,GAVuB;AAoB7BoB,EAAAA,IAAI,EAAC;AACDC,IAAAA,KAAK,EAAC,OADL;AAEDC,IAAAA,QAAQ,EAAC;AAFR;AApBwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react'\nimport { Image , View, Text, ActivityIndicator, StyleSheet, TouchableOpacity, Dimensions} from 'react-native'\n\nconst ScreenWidth=Math.round(Dimensions.get('window').width);\nconst ScreenHeight=Math.round(Dimensions.get('window').height);\n\nexport default class Card extends React.Component{\n \n    render(){\n     \n      \n        return(\n          <View style={{margin:5,borderColor:\"white\", borderWidth:3,borderRadius:3}}>\n          \n            <TouchableOpacity style={styles.container} onPress={()=>{this.props.navigate(\"Detail\",{id:this.props.id,cat:this.props.cat})}}>\n            <Image source={this.props.image} style={styles.image} />\n            \n            </TouchableOpacity>\n            </View>\n        );\n    }\n}\nconst styles = StyleSheet.create({\n    container: {\n    flex: 1,\n    backgroundColor: '#1f4068',\n    justifyContent:\"center\",\n    alignItems:\"center\",\n  \n    },\n  \n  \n    image:{\n       \n      flex:1,\n      width:ScreenWidth*0.95,\n      aspectRatio:1.5,\n      resizeMode:\"contain\",\n      borderWidth:2,\n      borderColor:'white',\n      \n  },\n    text:{\n        color:\"white\",\n        fontSize:40,\n    }\n  })"]},"metadata":{},"sourceType":"script"}