{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar firebase = _interopRequireWildcard(require(\"firebase\"));\n\nvar _Floatingbutton = _interopRequireDefault(require(\"./Floatingbutton\"));\n\nvar _FetchMS = require(\"../search/FetchMS\");\n\nvar _Colors = _interopRequireDefault(require(\"../../utils/Colors\"));\n\nvar _jsxFileName = \"/home/bharat/Desktop/talkon/components/detail/Detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ScreenWidth = Math.round(_reactNative.Dimensions.get('window').width);\nvar ScreenHeight = Math.round(_reactNative.Dimensions.get('window').height);\n\nvar Detail = function (_React$Component) {\n  (0, _inherits2.default)(Detail, _React$Component);\n\n  var _super = _createSuper(Detail);\n\n  function Detail() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Detail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: {},\n      loding: true,\n      id: \"\"\n    };\n\n    _this.componentDidMount = function _callee() {\n      var _this$props$route$par, id, cat, ref, my_ref;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _this$props$route$par = _this.props.route.params, id = _this$props$route$par.id, cat = _this$props$route$par.cat;\n              ref = 'category/' + cat + '/' + id;\n              _context.next = 5;\n              return _regenerator.default.awrap(firebase.database().ref(ref));\n\n            case 5:\n              my_ref = _context.sent;\n              my_ref.on('value', function (dataSnap) {\n                if (dataSnap.val()) {\n                  _this.setState({\n                    loding: false,\n                    data: dataSnap.val()\n                  });\n                }\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Detail, [{\n    key: \"render\",\n    value: function render() {\n      return this.state.loding ? _react.default.createElement(_reactNative.ActivityIndicator, {\n        animating: this.state.loding,\n        size: 'large',\n        color: _Colors.default.HeaderColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }) : _react.default.createElement(_reactNative.View, {\n        style: styles.mainConatainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: {\n          uri: this.state.data.Poster\n        },\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: styles.about,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        style: styles.discription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 0.3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, \"Title: \" + this.state.data.Title + \"  (\" + this.state.data.Year + \")\"), _react.default.createElement(_reactNative.Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"Rattings: \" + this.state.data.imdbRating)), _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.btext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, \"Discription\"), _react.default.createElement(_reactNative.Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, this.state.data.Plot))), _react.default.createElement(_Floatingbutton.default, {\n        onPress: function onPress() {\n          console.log(\"pressed\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n  return Detail;\n}(_react.default.Component);\n\nexports.default = Detail;\n\nvar styles = _reactNative.StyleSheet.create({\n  mainConatainer: {\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  image: {\n    flex: 0.4,\n    width: ScreenWidth,\n    resizeMode: \"contain\",\n    borderWidth: 2,\n    borderColor: 'white'\n  },\n  about: {\n    flex: 0.6,\n    backgroundColor: \"black\"\n  },\n  btext: {\n    color: \"white\",\n    fontSize: 30\n  },\n  text: {\n    color: 'white',\n    fontSize: 20\n  },\n  discription: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/bharat/Desktop/talkon/components/detail/Detail.js"],"names":["ScreenWidth","Math","round","Dimensions","get","width","ScreenHeight","height","Detail","state","data","loding","id","componentDidMount","props","route","params","cat","ref","firebase","database","my_ref","on","dataSnap","val","setState","console","log","Colors","HeaderColor","styles","mainConatainer","uri","Poster","image","about","discription","flex","text","Title","Year","imdbRating","btext","Plot","React","Component","StyleSheet","create","backgroundColor","resizeMode","borderWidth","borderColor","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Image, Text , View , Alert ,TouchableOpacity,StyleSheet, Dimensions, ScrollView, ActivityIndicator} from 'react-native'\nimport * as firebase from 'firebase'\nimport Floatingbutton from './Floatingbutton'\nimport { MSdata } from '../search/FetchMS'\nimport Colors from '../../utils/Colors'\n\n\nconst ScreenWidth=Math.round(Dimensions.get('window').width)\nconst ScreenHeight=Math.round(Dimensions.get('window').height)\n\nexport default class Detail extends React.Component{\n   \nstate={ \n    data:{},\n    loding:true,\n    id:\"\"\n             }\n\n\n\n    componentDidMount=async ()=>{\n    try{\n        const {id,cat}=this.props.route.params\n        const ref='category/'+cat+'/'+id\n        const my_ref=await firebase.database().ref(ref)\n        my_ref.on('value',dataSnap=>{\n            if (dataSnap.val()){\n            this.setState({loding:false,data:dataSnap.val()})}\n        })\n    }\n    catch(error){\nconsole.log(error)\n    }\n     \n      \n       \n    \n }\n\n\n \n    render(){\n      \n      \n        return(\n\n            this.state.loding ? (\n            <ActivityIndicator animating={this.state.loding} size={'large'} color={Colors.HeaderColor} />)\n            :( <View style={styles.mainConatainer}> \n\n               \n                \n              <Image source={{uri:this.state.data.Poster}} style={styles.image}/>\n\n               <View style={styles.about}>\n                <ScrollView style={styles.discription}>\n                    <View style={{flex:0.3}}>\n                    <Text style={styles.text}>\n                          {\"Title: \"+this.state.data.Title+\"  (\"+this.state.data.Year+\")\"}\n                          </Text>\n                        <Text style={styles.text}>\n                          {\"Rattings: \"+this.state.data.imdbRating}\n                          </Text>\n                    </View>\n                    <View>\n                    <Text style={styles.btext}>\n                           Discription</Text>\n                        <Text style={styles.text}>\n                       {this.state.data.Plot}\n                             </Text>\n                    </View>\n                    \n                </ScrollView>\n              <Floatingbutton onPress={()=>{console.log(\"pressed\")}} />\n               </View>\n              </View>)\n            \n        );\n    }\n}\nconst styles=StyleSheet.create({\n    mainConatainer:{\n        flex:1,\n        backgroundColor:\"black\",\n        \n        \n\n    },\n    image:{\n       \n        flex:0.4,\n        width:ScreenWidth,\n        resizeMode:\"contain\",\n        borderWidth:2,\n        borderColor:'white',\n        \n    },\n    about:{\n        flex:0.6,\n        backgroundColor:\"black\",\n\n\n},\nbtext:{\n    color:\"white\",\n    fontSize:30,\n},\ntext:{\n    color:'white',\n    fontSize:20,\n    // backgroundColor:\"black\",\n\n},\ndiscription:{\n    flex:1\n},\n\n\n})"]},"metadata":{},"sourceType":"script"}