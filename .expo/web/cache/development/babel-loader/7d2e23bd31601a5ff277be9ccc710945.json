{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = FetchMS;\nexports.MSdata = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nfunction FetchMS(searchkey) {\n  var response, data, items;\n  return _regenerator.default.async(function FetchMS$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"http://www.omdbapi.com/?apikey=4ac1a9b8&s=\" + searchkey;\n          _context.next = 3;\n          return _regenerator.default.awrap(fetch(url));\n\n        case 3:\n          response = _context.sent;\n\n          if (!response) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 7;\n          return _regenerator.default.awrap(response.json());\n\n        case 7:\n          data = _context.sent;\n          items = data.Search.map(function (item) {\n            return {\n              imageLink: item.Poster,\n              title: item.Title,\n              category: item.Type,\n              id: item.imdbID\n            };\n          });\n          return _context.abrupt(\"return\", items);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar MSdata = function MSdata(imbdID) {\n  var url, response, data;\n  return _regenerator.default.async(function MSdata$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = \"http://www.omdbapi.com/?apikey=4ac1a9b8&i=\" + imbdID;\n          _context2.next = 3;\n          return _regenerator.default.awrap(fetch(url));\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return _regenerator.default.awrap(response.json());\n\n        case 6:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", data);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.MSdata = MSdata;","map":{"version":3,"sources":["/home/bharat/Desktop/talkon/components/search/FetchMS.js"],"names":["FetchMS","searchkey","url","fetch","response","json","data","items","Search","map","item","imageLink","Poster","title","Title","category","Type","id","imdbID","MSdata","imbdID"],"mappings":";;;;;;;;;;AAAe,SAAeA,OAAf,CAAuBC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,GAAG,GAAC,+CAA6CD,SAAjD;AADe;AAAA,4CAGcE,KAAK,CAACD,GAAD,CAHnB;;AAAA;AAGDE,UAAAA,QAHC;;AAAA,eAIHA,QAJG;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAKWA,QAAQ,CAACC,IAAT,EALX;;AAAA;AAKAC,UAAAA,IALA;AAOHC,UAAAA,KAPG,GAOID,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAQ;AAE/B,mBAAO;AACHC,cAAAA,SAAS,EAACD,IAAI,CAACE,MADZ;AAEHC,cAAAA,KAAK,EAACH,IAAI,CAACI,KAFR;AAGHC,cAAAA,QAAQ,EAACL,IAAI,CAACM,IAHX;AAIHC,cAAAA,EAAE,EAACP,IAAI,CAACQ;AAJL,aAAP;AAMH,WARU,CAPJ;AAAA,2CAgBAX,KAhBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBR,IAAMY,MAAM,GAAE,SAARA,MAAQ,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGdlB,UAAAA,GAHc,GAGT,+CAA6CkB,MAHpC;AAAA;AAAA,4CAKGjB,KAAK,CAACD,GAAD,CALR;;AAAA;AAKZE,UAAAA,QALY;AAAA;AAAA,4CAMAA,QAAQ,CAACC,IAAT,EANA;;AAAA;AAMXC,UAAAA,IANW;AAAA,4CAQVA,IARU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["export default async function FetchMS(searchkey){\nurl=\"http://www.omdbapi.com/?apikey=4ac1a9b8&s=\"+searchkey;\n       \n        const response=await fetch(url)\n        if (response)\n       { const data=await response.json()\n        \n        let items= data.Search.map((item)=>{\n            \n            return {\n                imageLink:item.Poster,\n                title:item.Title,\n                category:item.Type,\n                id:item.imdbID\n            };\n        })\n        return items}\n\n}\n\nexport const MSdata= async (imbdID)=>{\n   \n\n   let url= \"http://www.omdbapi.com/?apikey=4ac1a9b8&i=\"+imbdID\n  \n   const response=await fetch(url)\n    const data=await response.json()\n  \n    return data\n\n}"]},"metadata":{},"sourceType":"script"}