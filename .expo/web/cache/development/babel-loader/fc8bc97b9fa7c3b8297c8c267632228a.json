{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar firebase = _interopRequireWildcard(require(\"firebase\"));\n\nvar _FetchMS = require(\"./FetchMS\");\n\nvar _config = require(\"../../src/config\");\n\nvar _jsxFileName = \"/home/bharat/Desktop/talkon/components/search/ResultCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ScreenHeight = _reactNative.Dimensions.get('window').height;\n\nvar ScreenWidth = _reactNative.Dimensions.get('window').width;\n\nfirebase.initializeApp(_config.firebaseConfig);\n\nvar ResultCard = function (_React$Component) {\n  (0, _inherits2.default)(ResultCard, _React$Component);\n\n  var _super = _createSuper(ResultCard);\n\n  function ResultCard() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ResultCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.addData = function _callee() {\n      var _this$props, imageLink, title, navigate, id, data, my_ref;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, imageLink = _this$props.imageLink, title = _this$props.title, navigate = _this$props.navigate, id = _this$props.id;\n              _context.next = 3;\n              return _regenerator.default.awrap((0, _FetchMS.MSdata)(id));\n\n            case 3:\n              data = _context.sent;\n\n              try {\n                my_ref = firebase.database().ref(\"category/\" + data.Type).child(data.imdbID);\n                my_ref.set(data), function (err) {\n                  console.log(error);\n                };\n                navigate(\"Detail\", {\n                  id: id,\n                  cat: data.Type\n                });\n              } catch (error) {\n                console.log(error);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(ResultCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          imageLink = _this$props2.imageLink,\n          title = _this$props2.title;\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.card_container,\n        onPress: this.addData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.headerImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: {\n          uri: imageLink\n        },\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.Card_data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, title)));\n    }\n  }]);\n  return ResultCard;\n}(_react.default.Component);\n\nexports.default = ResultCard;\n\nvar styles = _reactNative.StyleSheet.create({\n  card_container: {\n    elevation: 5,\n    flexDirection: \"row\",\n    flex: 0.2,\n    justifyContent: \"space-between\",\n    marginVertical: 5,\n    shadowColor: \"white\"\n  },\n  headerImage: {\n    flex: 0.36,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'black',\n    borderRadius: 3\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"contain\",\n    aspectRatio: 1,\n    borderRadius: 3,\n    borderColor: \"white\",\n    borderWidth: 2,\n    width: ScreenWidth * 0.10,\n    height: ScreenHeight * 0.2\n  },\n  Card_data: {\n    flex: 0.6\n  },\n  title: {\n    color: \"white\",\n    fontSize: 30\n  },\n  text: {\n    color: 'white',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/home/bharat/Desktop/talkon/components/search/ResultCard.js"],"names":["ScreenHeight","Dimensions","get","height","ScreenWidth","width","firebase","initializeApp","firebaseConfig","ResultCard","addData","props","imageLink","title","navigate","id","data","my_ref","database","ref","Type","child","imdbID","set","err","console","log","error","cat","styles","card_container","headerImage","uri","image","Card_data","React","Component","StyleSheet","create","elevation","flexDirection","flex","justifyContent","marginVertical","shadowColor","alignItems","backgroundColor","borderRadius","resizeMode","aspectRatio","borderColor","borderWidth","color","fontSize","text"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Text , View ,TouchableOpacity, Image,StyleSheet,Dimensions } from 'react-native'\nimport * as firebase from 'firebase'\nconst ScreenHeight=(Dimensions.get('window').height)\nconst ScreenWidth=(Dimensions.get('window').width)\nimport{ MSdata } from './FetchMS'\nimport { firebaseConfig } from '../../src/config'\n\nfirebase.initializeApp(firebaseConfig)\n\nexport default class ResultCard extends React.Component{\n\n\naddData=async () =>{\n   \n    const {imageLink,title,navigate,id}=this.props\n\n    const data=await MSdata(id)\n    try{\n        const my_ref=  firebase.database().ref(\"category/\"+data.Type).child(data.imdbID)\n        my_ref.set(data),function(err){\n            console.log(error)\n        }\n        // console.log(\"hi\")\n        navigate(\"Detail\",{id:id,cat:data.Type})\n    }catch(error){\nconsole.log(error)\n    }\n   \n  \n\n}\n\n    render(){\n\n\n        const {imageLink,title}=this.props\n\n        return(\n            <TouchableOpacity style={styles.card_container} onPress={this.addData} >\n         \n                <View style={styles.headerImage}>\n                    <Image source={{uri:imageLink}} style={styles.image} />\n                </View>\n                <View style={styles.Card_data}>\n        <Text style={styles.title}>{title}</Text>\n        {/* <Text style={styles.text}>{}</Text>\n        <Text style={styles.text}>{}</Text> */}\n                </View>\n\n\n           \n            </TouchableOpacity>\n        );\n    }\n}\nconst styles=StyleSheet.create({\n        card_container:{\n            elevation:5,\n            flexDirection:\"row\",\n            flex:0.2,\n            justifyContent:\"space-between\",\n            marginVertical:5,\n            shadowColor:\"white\"\n        },\n        headerImage:{\n            flex:0.36,\n           \n            alignItems:'center',\n            justifyContent:'center',\n            backgroundColor:'black',\n            borderRadius:3,\n        },\n        image:{\n            flex:1,\n            resizeMode:\"contain\",\n            aspectRatio:1,\n            borderRadius:3,\n            borderColor:\"white\",\n            borderWidth:2,\n            width:ScreenWidth*0.10,\n            height:ScreenHeight*0.2\n        },\n        Card_data:{\n            flex:0.6,\n            // backgroundColor:\"white\"\n        },\n        title:{\n            color:\"white\",\n            fontSize:30,\n        },\n        text:{\n            color:'white',\n            fontSize:20\n        }\n\n})"]},"metadata":{},"sourceType":"script"}